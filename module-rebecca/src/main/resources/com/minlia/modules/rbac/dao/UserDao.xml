<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.minlia.modules.rbac.domain.User">
    <select id="findUseMapper444" resultType="com.minlia.modules.rbac.domain.User" lang="XML">
        SELECT
        *
        from user
        limit #{pageSize} offset #{offset}
    </select>
    <select id="count_findUseMapper444" lang="XML" resultType="long">select count(*) from user
    </select>




    <select id="findUseMapper22" resultType="com.minlia.modules.rbac.domain.User" lang="XML">
        SELECT * from user as user where  user.first_name like #{p0}
        <include refid="LIMIT" />
    </select>

    <select id="count_findUseMapper22" resultType="Long"
            lang="XML">
        SELECT
        count(*)
        from user as user

        where 1=1

        and user.first_name like #{p0}


    </select>



    <select id="222findOneByUsernameOrEmailOrCellphone" resultType="com.minlia.modules.rbac.domain.User" lang="XML">
        SELECT
        `user`.id AS `id` ,
        `user`.account_expired AS `accountExpired` ,
        `user`.app_id AS `appId` ,
        `user`.cellphone AS `cellphone` ,
        `user`.credentials_expired AS `credentialsExpired` ,
        `user`.created_by AS `createdBy` ,
        `user`.email AS `email` ,
        `user`.expired AS `expired` ,
        `user`.enabled AS `enabled` ,
        `user`.first_name AS `firstName` ,
        `user`.full_name AS `fullName` ,
        `user`.guid AS `guid` ,
        `user`.last_name AS `lastName` ,
        `user`.locked AS `locked` ,
        `user`.locale AS `locale` ,
        `user`.last_modified_by AS `lastModifiedBy` ,
        `user`.nick_name AS `nickName` ,
        `user`.`PASSWORD` AS `password` ,
        `user`.tenant_id AS `tenantId` ,
        `user`.username AS `username`
        FROM
        USER `user`
        WHERE
        <if test="login != null">
            <trim prefix=" where " prefixOverrides="and |or ">
                OR (`user`.username = #{login})
            </trim>
        </if>
        <if test="login != null">
            <trim prefix=" where " prefixOverrides="and |or ">
                OR (`user`.email = #{login})
            </trim>
        </if>
        <if test="login != null">
            <trim prefix=" where " prefixOverrides="and |or ">
                OR (`user`.cellphone = #{login})
            </trim>
        </if>
    </select>

</mapper>

